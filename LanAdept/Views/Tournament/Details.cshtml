@model LanAdept.Views.Tournament.ModelController.TournamentModel
@using LanAdept.Views.Tournament.ModelController;


@{
	ViewBag.Title = "Details";
}
<div class="map-max-width">

	<div class="page-header clearfix">
		<h1 class="pull-left">@Html.DisplayFor(model => model.Game.Name)</h1>


		@if (Model.IsConnected && Model.UserTeam == null)
		{
			<br />
			<div class="btn-toolbar pull-right">
				<div class="btn-group">
					@Html.ActionLink("Ajouter une equipe", "AddTeam", new { id = Model.TournamentID }, new { @class = "btn btn-default" })
				</div>
			</div>
		}
	</div>
	@if (Model.Info != null)
	{
		<h3>Informations et reglements</h3>
		<div>
			@Html.Markdown(Model.Info)
		</div>
		<hr />
	}

	<h4>Teams</h4>

	@using (Html.BeginForm("JoinTeam", "Tournament", new JoinTeamModel() { TournamentID = Model.TournamentID }))
	{
		@Html.Hidden("GamerTagID", 0, new { id = "tagInput" })
		@Html.Hidden("TeamID", 0, new { id = "teamInput" })

		if (Model.IsConnected)
		{
			@Html.Partial("ModalChoisirGamerTag", Model.GamerTags)
		}

		<div class="table-responsive">
			<table class="table">
				<tr>
					<th>@Html.DisplayNameFor(model => model.Teams.First().Name)</th>
					<th>@Html.DisplayNameFor(model => model.Teams.First().Tag)</th>
					<th>Nombre de joueur</th>
					<th>Membre de l'équipe</th>
					@if (Model.IsConnected)
					{
						<th></th>
					}
				</tr>

				@foreach (Team team in Model.Teams)
				{
					<tr>
						<td>
							@team.Name
						</td>
						<td>
							@if (team.Tag != null)
							{
								@team.Tag
							}
						</td>
						<td>
							@team.GamerTags.Count / @team.Tournament.MaxPlayerPerTeam
						</td>
						<td>
							@foreach (var tag in team.GamerTags)
							{
								<div class="col-xs-12">@tag.Gamertag</div>
							}
						</td>
							@if (Model.IsConnected)
							{
								if (Model.UserTeam == null)
								{
									<td>
										<div class="col-md-6 pull-right">
											<button class="teamButton hover btn btn-default" type="button" data-toggle="modal" data-team-id="@team.TeamID" data-target="#ModalChoisirGamerTag">Rejoindre</button>
										</div>
									</td>
								}
							}
					</tr>
				}
			</table>
		</div>
	}
</div>


@section scripts {
	<script>
		$(document).ready(function () {

			$('.teamButton').click(function () {
				$('.teamActive').removeClass('teamActive');
				$(this).addClass('teamActive');
			})

			$('.tagItem').click(selectGamerTag);

			$('#actionButton').click(function (event) {
				if (!$('.tagItem').hasClass('active'))
					event.preventDefault();
				else {
					$(this).button('loading');
					$('#teamInput').val($('.teamActive').attr('data-team-id'));
					$('#tagInput').val($('.active').attr('data-tag-id'));
				}
			})

			$('.addGamertag').click(function (event) {
				$.ajax({
					method: "POST",
					url: "@Url.Action("AddGamerTag")",
					data: { gamertag: $('#gamerTagText').val() }
				}).done(function (data) {
					console.log(data);
					if (!data.HasError) {
						var element = $('<a href="#" class="tagItem list-group-item" data-tag-id="' + data.GamerTagID + '">' + data.Gamertag + '</a>')
						$('#listGamerTag').append(element);
						element.click(selectGamerTag);
						$('#gamerTagText').val("");
					}
				})
			});

			$('#ModalChoisirGamerTag').on('show.bs.modal', function (event) {
				var button = $(event.relatedTarget);
				var modal = $(this);
			});

			function selectGamerTag() {
				$('#GamerTagID').val($(this).attr('data-tag-id'));
				$('.active').removeClass('active');
				$(this).addClass('active');
				if ($('#actionButton').hasClass('disabled'))
					$('#actionButton').removeClass('disabled');
			}
		})
	</script>
}

@section Styles {
	@Styles.Render("~/Content/Tournois.css")
}

