@model LanAdept.Views.Tournament.ModelController.TournamentModel
@using LanAdept.Views.Tournament.ModelController;


@{
	ViewBag.Title = "Details";
}
<h1>
	@ViewBag.test
</h1>


<div class="map-max-width">

	@if (Model.IsOver)
	{
	<div class="alert alert-danger">Le tournois est terminer</div>
	}
	else if (Model.IsStarted)
	{
		<div class="alert alert-success">Le tournois est commencer</div>
	}


	<div class="page-header clearfix">
		<h1 class="pull-left">@Html.DisplayFor(model => model.Game.Name)</h1>


		@if (Model.IsConnected && !Model.IsStarted && !Model.IsOver && Model.CanAddTeam)
		{
			<br />
			<div class="btn-toolbar pull-right">
				<div class="btn-group">
					@Html.ActionLink("Ajouter une équipe", "AddTeam", new { id = Model.TournamentID }, new { @class = "btn btn-default" })
				</div>
			</div>
		}
	</div>
	@if (Model.Info != null)
	{
		<h3>Informations et règlements</h3>
		<div>
			@Html.Markdown(Model.Info)
		</div>
		<hr />
	}

	<h4>Équipes</h4>

	@using (Html.BeginForm("JoinTeam", "Tournament", new JoinTeamModel() { TournamentID = Model.TournamentID }))
	{
		@Html.Hidden("GamerTagID", 0, new { id = "tagInput" })
		@Html.Hidden("TeamID", 0, new { id = "teamInput" })

		if (Model.IsConnected)
		{
			@Html.Partial("ModalChoisirGamerTag", Model.GamerTags)
			@Html.Partial("ModalChoisirGamerTagFooterRejoindre")
		}

		<div class="table-responsive">
			<table class="table">
				<tr>
					<th>@Html.DisplayNameFor(model => model.Teams.First().Name)</th>
					<th>@Html.DisplayNameFor(model => model.Teams.First().Tag)</th>
					<th>Nombre de joueur</th>
					<th>Membre de l'équipe</th>
					@if (Model.IsConnected)
					{
						<th></th>
					}
				</tr>

				@foreach (TeamModel team in Model.Teams)
				{
					<tr>
						<td>
							@team.Name
						</td>
						<td>
							@if (team.Tag != null)
							{
								@team.Tag
							}
						</td>
						<td>
							@if (team.Gamertags.Count() == Model.MaxPlayerPerTeam)
							{
								<div class="alert alert-success">
									Complète
								</div>
							}
							else
							{
								<div>
									@team.Gamertags.Count() / @Model.MaxPlayerPerTeam
								</div>
							}
						</td>
						<td>
							@foreach (GamerTag gamerTag in team.Gamertags)
							{
								if (gamerTag == team.TeamLeaderTag)
								{
									<div class="col-xs-12">@gamerTag.Gamertag <span class="glyphicon glyphicon-star-empty"></span></div>
								}
								else
								{
									<div class="col-xs-12">@gamerTag.Gamertag</div>
								}
							}
						</td>
						@if (Model.IsConnected)
						{
							<td>
								<div class="col-md-6 pull-right">
									@if (team.IsMyTeamForTeamLeader)
									{
										@Html.ActionLink("Mon équipe", "DetailsTeam", "Team", new { teamId = team.TeamID }, new { @class = "btn btn-primary" })
									}
									else if (team.IsMyTeam)
									{
										@Html.ActionLink("Quitter", "LeaveTeam", "Team", new { teamId = team.TeamID }, new { @class = "btn btn-danger" })
									}
									else if (team.IsTeamDemande)
									{
										@Html.ActionLink("Annuler ma demande", "CancelDemande", "Team", new { teamId = team.TeamID }, new { @class = "btn btn-danger" })
									}
									else if (team.Gamertags.Count() < Model.MaxPlayerPerTeam && !Model.IsTeamLeader && !Model.IsStarted && !Model.IsOver)
									{
										<button class="teamButton hover btn btn-default" type="button" data-toggle="modal" data-team-id="@team.TeamID" data-target="#ModalChoisirGamerTag">Rejoindre</button>
									}
								</div>
							</td>
						}
					</tr>
				}
			</table>
		</div>
	}
</div>

@section scripts {
	<script>
		$(document).ready(function () {

			$('.teamButton').click(function () {
				$('.teamActive').removeClass('teamActive');
				$(this).addClass('teamActive');
			})

			$('.tagItem').click(selectGamerTag);

			$('#actionButton').click(function (event) {
				if (!$('.tagItem').hasClass('active'))
					event.preventDefault();
				else {
					$(this).button('loading');
					$('#teamInput').val($('.teamActive').attr('data-team-id'));
					$('#tagInput').val($('.active').attr('data-tag-id'));
				}
			})

			$('.addGamertag').click(function (event) {
				$.ajax({
					method: "POST",
					url: "@Url.Action("AddGamerTag")",
					data: { gamertag: $('#gamerTagText').val() }
				}).done(function (data) {
					console.log(data);
					if (!data.HasError) {
						var element = $('<a href="#" class="tagItem list-group-item" data-tag-id="' + data.GamerTagID + '">' + data.Gamertag + '</a>')
						$('#listGamerTag').append(element);
						element.click(selectGamerTag);
						$('#gamerTagText').val("");
					}
				})
			});

			$('#ModalChoisirGamerTag').on('show.bs.modal', function (event) {
				var button = $(event.relatedTarget);
				var modal = $(this);
			});

			function selectGamerTag() {
				$('#GamerTagID').val($(this).attr('data-tag-id'));
				$('.active').removeClass('active');
				$(this).addClass('active');
				if ($('#actionButton').hasClass('disabled'))
					$('#actionButton').removeClass('disabled');
			}
		})
	</script>
}

@section Styles {
	@Styles.Render("~/Content/Tournois.css")
}

