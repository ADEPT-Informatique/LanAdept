@model LanAdept.Views.Place.ModelController.ListeModel

@{
	ViewBag.Title = "Liste des places";
	ViewBag.Settings = Model.Settings;
	
	User loggedInUser = LanAdeptCore.Service.UserService.GetLoggedInUser();
}

@if (LanAdeptCore.Service.ReservationService.HasUserPlace())
{
	@Html.Partial("ModalChangerPlacePartial")
}
else
{
	@Html.Partial("ModalReserverPlacePartial")
}
<div class="page-header clearfix">
	<h1 class="pull-left">
		Liste des places
		@if (loggedInUser != null && !LanAdeptCore.Service.ReservationService.HasUserPlace())
		{
			<span class="glyphicon glyphicon-question-sign info" data-toggle="tooltip" data-placement="bottom" title="Pour réserver une place, cliquez sur la place qui vous intéresse dans le plan ci-dessous."></span>
		}
	</h1>

	@if (LanAdeptCore.Service.ReservationService.HasUserPlace())
	{
		<div class="btn-toolbar pull-right">
			<div class="btn-group">
				@Html.AuthorizeActionLink("Ma place", "MaPlace", null, null, new { @class = "btn btn-success btn-header" })
			</div>
		</div>
	}

</div>

@Html.ShowMessage()

@if (Model.Settings.IsLanOver)
{
	<div class="alert alert-warning" role="alert">
		Le LAN est maintenant terminé. Il n'est donc plus possible de réserver une place.
	</div>
}
else if (Model.Settings.IsLanStarted)
{
	<div class="alert alert-warning" role="alert">
		Le LAN a déjà débuté. Il n'est donc plus possible de réserver une place. Si vous désirez obtenir une place ou changer de place, veuillez vous rendre à l'accueil du LAN.
		<br /><br />
		Plusieurs places sont aussi disponible sans réservation dès 16h et ne sont donc pas affiché sur ce plan.
	</div>
}
else
{
	if (loggedInUser == null)
	{
		<div class="alert alert-info" role="alert">
			Pour réserver une place, vous devez d'abord @Html.AuthorizeActionLink("vous connecter", "Login", "Auth", new { returnUrl = HttpContext.Current.Request.RawUrl }, new { @class = "alert-link" }).
			Si vous n'avez pas encore de compte, vous pouvez en créer un en @Html.AuthorizeActionLink("cliquant ici", "Register", "Auth", null, new { @class = "alert-link" })
		</div>
	}
}
@if (!Model.Settings.IsLanStarted && Model.NbPlacesLibres < 25)
{
	<div class="alert alert-warning" role="alert">
		Advenant le cas où toutes les places seraient épuisées, il est à noter que d'autres places
		seront disponibles <strong>sans réservation</strong> à partir de 16h le 14 octobre (mercredi),
		vous n'avez qu'à vous présenter à la table d'accueil dès votre arrivée.
		Il est à noter que ces places seront disponibles en quantité limitée, donc premier arrivé, premier servi.
	</div>
}

@foreach (LanAdept.Views.Place.ModelController.FastMap fastMap in Model.Maps)
{
	@Html.Partial("SingleMapPartial", fastMap)
}

<div id="legende-container">
	<div id="legende">
		<div class="row">
			<h4>Légende</h4>
			<div class="legende-col" data-toggle="tooltip" data-placement="top" title="Indique que cette place n'est pas réservée.">
				<div class="place">A00</div>
			</div>
			<div class="legende-col" data-toggle="tooltip" data-placement="top" title="Indique que cette place est réservée, mais que personne ne l'occupe présentement.">
				<div class="place place-reserve">A00</div>
			</div>
			<div class="legende-col" data-toggle="tooltip" data-placement="top" title="Indique votre place actuelle.">
				<div class="place place-actuelle">A00</div>
			</div>
			<div class="legende-col" data-toggle="tooltip" data-placement="top" title="Indique que quelqu'un occupe actuellement cette place.">
				<div class="place place-occupe">A00</div>
			</div>
		</div>
		<div class="row">
			<div class="legende-col">
				<div class="legende-label">Libre</div>
			</div>
			<div class="legende-col">
				<div class="legende-label">Réservée</div>
			</div>
			<div class="legende-col">
				<div class="legende-label">Ma place</div>
			</div>
			<div class="legende-col">
				<div class="legende-label">Occupée</div>
			</div>
		</div>
	</div>
</div>

@section scripts {
	<script>
		$(function () {
			$('[data-toggle="tooltip"]').tooltip();
			$('[data-toggle="popover"]').popover();

			var placesToHighlight = window.location.hash.replace("#", "").split(";");

			highlightPlaces(placesToHighlight);
		});


		$('#ModalReserverPlace, #ModalChangerPlace').on('show.bs.modal', function (event) {
			var button = $(event.relatedTarget);
			var placeID = button.data('placeId');
			var text = button.data('placeText');

			var modal = $(this);
			modal.find('.modal-place-text').text(text);
			modal.find('.btnReserver').attr("href", "@Url.Action("Reserver")/" + placeID)
		});

		function highlightPlaces(placeArray) {
			for (var i = 0; i < placeArray.length; i++) {
				$("#" + placeArray[i]).addClass("place-highlight");
			}
		}

	</script>
}

@section Styles {
	<link href="@Url.Content("~/Content/Map.css")" rel="stylesheet" type="text/css" />
}