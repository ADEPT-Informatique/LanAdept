@model LanAdept.Models.LoginModel
@using Microsoft.Owin.Security
@{
	ViewBag.Title = "Se connecter";
}

<div class="login-container">

	<h2>Se connecter <small class="text-right">Pas de compte? @Html.ActionLink("S'inscrire", "Register")</small></h2>

	<div class="row vertical-divider">
		<div class="col-sm-6">
            <div class="alert alert-info">Veuillez prendre note que suite à une reconfiguration du serveur vous devrez vous créer un nouveau compte même si vous en possédiez déjà un au dernier LAN. Merci de votre compréhension.</div>
			@using (Html.BeginForm("Login", "Auth", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary("", new { @class = "text-danger" })

				<div class="form-group">
					@Html.LabelFor(model => model.Email, new { @class = "sr-only" })
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", autofocus = true, placeholder = Html.DisplayNameFor(m2 => m2.Email) } })
				</div>
				<div class="form-group">
					@Html.LabelFor(model => model.Password, new { @class = "sr-only" })
					@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m2 => m2.Password) } })
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-block">Se connecter</button>
				</div>
				<div class="row login-options">
					<div class="col-xs-6">
						@Html.EditorFor(model => model.RememberMe)
						@Html.LabelFor(model => model.RememberMe)
					</div>
					<div class="col-xs-6 text-right small">
						@Html.ActionLink("Mot de passe oublié?", "ForgotPassword")
					</div>
				</div>
			}
		</div>
		<div class="vertical-divider-text">
			ou
		</div>
		<div class="col-sm-6">
			<hr />
			@{
			var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
			if (loginProviders.Count() > 0)
			{
				using (Html.BeginForm("ExternalLogin", "Auth", new { ReturnUrl = ViewBag.ReturnUrl }))
				{
						@Html.AntiForgeryToken()
						<div id="socialLoginList">
							<p>
								@foreach (AuthenticationDescription p in loginProviders)
								{
									<div class="form-group">
										<button class="btn btn-block btn-social btn-@p.AuthenticationType.ToLower()" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Connexion avec votre compte @p.Caption">
											<span class="fa fa-@p.AuthenticationType.ToLower()"></span> Se connecter avec @p.AuthenticationType
										</button>
									</div>
								}
							</p>
						</div>
				}

			}
			}

		</div>
	</div>
</div>

@section Styles {
	<link href="@Url.Content("~/Content/login.css")" rel="stylesheet" type="text/css" />
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
