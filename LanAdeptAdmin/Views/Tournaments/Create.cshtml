@model LanAdeptAdmin.Models.TournamentCreateModel

@{
    ViewBag.Title = "Ajouter un tournoi";
    ViewBag.Sidebar = "_Sidebar_Tournament";
    IEnumerable<SelectListItem> items = ViewBag.Types;
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Game, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Game, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Game, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxPlayerPerTeam, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.MaxPlayerPerTeam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxPlayerPerTeam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsChallonge, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.IsChallonge, new { htmlAttributes = new { id = "challonge", @class = "" } })
                @Html.ValidationMessageFor(model => model.IsChallonge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="useChallonge" style="display:none">
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.Type, items, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <label class="control-label col-md-3"></label>
            <div class="col-md-5 alert alert-info text-center">
                Plusieurs configuration de challonge ne sont pas disponible pour l'instant.
                Si vous souhaitez modifier d'autres valeurs, vous devez contacter l'administrateur des tournois.
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-5 text-right">
                <input type="submit" value="Ajouter" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(function () {
            $('#StartTime').datetimepicker({
                locale: 'fr-ca'
            });

            $("#challonge").change(function () {
                $("#useChallonge").toggle(500);
            });
        });
    </script>
}
