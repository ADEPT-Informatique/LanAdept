@model LanAdeptAdmin.Views.Tournaments.ModelController.TournamentModel

@{
	ViewBag.Title = "Modifier un tournoi";
	ViewBag.Sidebar = "_Sidebar_Tournament";
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.Game, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-6">
				@Html.EditorFor(model => model.Game, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Game, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.MaxPlayerPerTeam, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-6">
				@Html.EditorFor(model => model.MaxPlayerPerTeam, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.MaxPlayerPerTeam, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-6">
				@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @Value = Model.StartTime.Value.ToString("yyyy-MM-dd HH:mm") } })
				@Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsChallonge, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.IsChallonge, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.IsChallonge, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-6">
				@Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control", style = "height:400px;" } })
				@Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
				<div class="help-block">Ce champ supporte le markdown (<a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank">Référence</a>)</div>

				<h4>Prévisualisation:</h4>
				<pre id="prev">
					@Html.Markdown(Model.Info)
				</pre>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-3 col-md-6 text-right">
				@Html.IconActionLink("glyphicon-arrow-left", "Details", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-default" })
				<button type="submit" class="btn btn-primary">
					<span class="glyphicon glyphicon-floppy-disk"></span> Enregistrer
				</button>
			</div>
		</div>
	</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/markdown")

	<script>
		$(function () {

			var markdown = new MarkdownDeep.Markdown();
			markdown.ExtraMode = true;
			markdown.SafeMode = false;

			$("#Info").keyup(function () {
				$("#prev").html(markdown.Transform($("#Info").val()));
			});

			$('#StartTime').datetimepicker({
				locale: 'fr-ca'
			});

		});
	</script>
}