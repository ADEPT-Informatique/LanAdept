@model  LanAdeptAdmin.Views.Tournaments.ModelController.TournamentModel

@{
	ViewBag.Title = "Details";
	ViewBag.Sidebar = "_Sidebar_Tournament";
}

<h2>
	@Html.DisplayFor(model => model.Game)
	<div class="pull-right">@Model.GetStatus()</div>
</h2>
<hr />

<div class="row">
	<div class="col-md-3 col-lg-4">
		<dl class=" dl-horizontal">
			<dt>
				@Html.DisplayNameFor(model => model.StartTime)
			</dt>

			<dd>
				@Html.DisplayFor(model => model.StartTime)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.MaxPlayerPerTeam)
			</dt>

			<dd>
				@Html.DisplayFor(model => model.MaxPlayerPerTeam)
			</dd>

		</dl>
	</div>
	<div class="col-md-9 col-lg-8 text-right">
		
		@if (!Model.IsPublished)
		{
			@Html.TextIconActionLink("Publier", "glyphicon-eye-open", "Publish", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-info btn-mobile-full", title = "Rend le tournois visible aux visiteurs" })
		}
		else if (!Model.IsStarted && !Model.IsOver)
		{
			@Html.TextIconActionLink("Démarrer", "glyphicon-play", "Start", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-success btn-mobile-full" })
			<text> </text>
			@Html.TextIconActionLink("Cacher", "glyphicon-eye-close", "CancelPublish", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-info btn-mobile-full", title = "Rend le tournois invisible aux visiteurs" })
		}
		else if (Model.IsStarted && !Model.IsOver)
		{
			@Html.TextIconActionLink("Suspendre", "glyphicon-pause", "CancelStart", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-warning btn-mobile-full" })
			<text> </text>
			@Html.TextIconActionLink("Terminer", "glyphicon-stop", "Stop", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-danger btn-mobile-full" })
		}
		else
		{
			@Html.TextIconActionLink("Reprendre", "glyphicon-play", "Start", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-success btn-mobile-full", title = "Reprendre le tournoi" })
			<text> </text>
			@Html.TextIconActionLink("Revenir", "glyphicon-fast-backward", "CancelStart", "Tournaments", new { id = Model.Id }, new { @class = "btn btn-warning btn-mobile-full", title = "Remettre le tournoi à l'étape de préparation" })
		}
		@Html.TextIconActionLink("Modifier", "glyphicon-pencil", "Edit", null, new { id = Model.Id }, new { @class = "btn btn-primary btn-mobile-full" })
		<button type="button" class="btn btn-default btn-mobile-full" data-toggle="modal" data-target="#teamList">
			<span class="glyphicon glyphicon-copy"></span> liste copiable
		</button>
	</div>
</div>
<div class="row">
	<div class="col-xs-12">
		<h3>Informations et reglements</h3>
		<p>
			@if (!string.IsNullOrWhiteSpace(Model.Info))
			{
				@Html.Markdown(Model.Info)
			}
			else
			{
				<em>Les règlements n'ont pas encore été définis.</em>
			}
		</p>
	</div>
</div>
<div class="row">
	<div class="col-xs-12">
		<h3>Équipes inscrites</h3>
		@if (Model.Teams.Count > 0)
		{
			<table class="table">
				<tr>
					<th>@Html.DisplayNameFor(model => model.Teams.First().Name)</th>
					<th>@Html.DisplayNameFor(model => model.Teams.First().Tag)</th>
					<th>Nombre de joueur</th>
					<th></th>
				</tr>

				@foreach (LanAdeptData.Model.Tournaments.Team team in Model.Teams)
				{
					<tr @("class=clickable-row data-row-url=" + Url.Action("DetailsTeam", new { id = team.TeamID }))>
						<td>
							@if (team.IsConfirmed)
							{
								<span class="label label-success"><span class="glyphicon glyphicon-ok"></span></span>
							}
							else
							{
								<span class="label label-danger"><span class="glyphicon glyphicon-hourglass"></span></span>
							}

							@team.Name
						</td>
						<td>
							@if (team.Tag != null)
							{
								@team.Tag
							}
						</td>
						<td>
							@if (team.GamerTags.Count >= team.Tournament.MaxPlayerPerTeam)
							{
								<span class="label label-success">
									Complete
								</span>
							}
							else
							{
								<p>
									@team.GamerTags.Count / @team.Tournament.MaxPlayerPerTeam
								</p>
							}
						</td>
						<td class="text-right">
							@Html.IconActionLink("glyphicon-trash", "DeleteTeam", null, new { id = team.TeamID }, new { @class = "btn btn-danger btn-sm" })
						</td>
					</tr>
				}
			</table>
		}
		else
		{
			<em>Il n'y a pas encore d'équipe inscrite à ce tournoi.</em>
		}
	</div>
</div>
<br />
<div class="row">
	<div class="col-xs-12">
		@Html.TextIconActionLink("Retour", "glyphicon-arrow-left", "Index", "Tournaments", null, new { @class = "btn btn-default" })
	</div>
</div>

<!-- Modal -->
<div class="modal fade" id="teamList" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title" id="myModalLabel">Copier la liste d'équipes</h4>
			</div>
			<div class="modal-body">
				@if (Model.Teams.Count > 0)
				{
					foreach (LanAdeptData.Model.Tournaments.Team team in Model.Teams)
					{
						<p>
							@team.Name
						</p>
					}
				}
				else
				{
					<em>Il n'y a pas encore d'équipe inscrite à ce tournoi.</em>
				}
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
